    let Monad = ./../Monad/Type

in  let extractFunctor = ./../Monad/extractFunctor

in  let Either = ./../Either/Type

in    λ(f : Type → Type)
    → λ(c : ./Type f)
    → λ(monad : Monad f)
    → λ(a : Type)
    → λ(b : Type)
    → λ(k : a → f (Either a b))
    → λ(fa : f a)
    → c.separate (extractFunctor f monad) a b (monad.bind a (Either a b) fa k)
