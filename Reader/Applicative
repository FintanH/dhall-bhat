    let Reader = ./Type

in  let Applicative = ../Applicative/Type

in    λ(r : Type)
    → { applicative =
          { ap =
                λ(a : Type)
              → λ(b : Type)
              → λ(g : Reader r (a → b))
              → λ(fa : Reader r a)
              → { runReader = λ(env : r) → g env (fa env) }
          , pure =
              λ(a : Type) → λ(x : a) → λ(env : r) → x
          }
      , functor =
          ./Functor  r
      }
