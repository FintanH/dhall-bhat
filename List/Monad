    let Monad = ../Monad/Type

in  let concatMap = ../Prelude/List/concatMap

in  (   { applicative =
            ./Applicative
        , monad =
            { bind =
                  λ(a : Type)
                → λ(b : Type)
                → λ(fa : List a)
                → λ(k : a → List b)
                → concatMap a b k fa
            }
        }
      : Monad List
    )
