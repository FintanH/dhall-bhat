    let Monad = ../Monad/Type

in  let map = ./Functor .map

in  let concat =
          https://ipfs.io/ipfs/QmQ8w5PLcsNz56dMvRtq54vbuPe9cNnCCUXAQp6xLc6Ccx/Prelude/Optional/concat

in  (   { applicative =
            ./Applicative
        , monad =
            { bind =
                  λ(a : Type)
                → λ(b : Type)
                → λ(fa : Optional a)
                → λ(k : a → Optional b)
                → concat b (map a (Optional b) k fa)
            }
        }
      : Monad Optional
    )
