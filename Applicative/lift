    let Applicative = ./Type

in    λ(f : Type → Type)
    → λ(app : Applicative f)
    → λ(a : Type)
    → λ(b : Type)
    → λ(c : Type)
    → λ(g : a → b → c)
    → λ(fa : f a)
    → λ(fb : f b)
    →     let h = app.map a (b → c) (λ(aVal : a) → λ(bVal : b) → g aVal bVal) fa
      
      in  app.ap b c h fb
